{"version":3,"sources":["components/main/StaffAdd.js","components/main/StaffList.js","components/main/Result.js","components/main/RandomHPPDInfo.js","components/main/StaffBudget.js","components/main/ShiftTotals.js","components/main/Scenario.js","assets/Left-aligned-square-gray-2.png","components/header/Header.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["StaffAdd","props","generateUUID","s","hexDigits","i","substr","Math","floor","random","join","getShiftValue","shiftString","shiftValue","handleAdd","value","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","uuid","shiftTotal","parseInt","quantity","shift","staff","id","type","staffType","onStaffAdd","handleClose","setState","handleShow","state","open","show","qtyVals","push","qtyList","map","qty","className","onClick","this","Modal","animation","onHide","Form","onSubmit","Header","Title","Body","Group","controlId","required","Label","Control","as","name","Footer","Button","variant","React","Component","StaffList","listAdd","index","staffs","onStaffChangeOnUpdate","listSub","splice","listRemove","shiftFilter","staffList","filter","bind","length","onChange","e","scope","Result","getStaffHours","totalHours","calculation","info","retVal","census","HPPD","calc","toFixed","RandomHPPDInfo","Min","Max","Range","Rand","round","setRandomValues","randomHPPD","randomBedUnit","unit","bedUnit","onInfoChange","StaffBudget","getShiftBudget","shiftBudget","showBudget","ShiftTotals","getDayShift","dayShiftHours","getEveningShift","eveningShiftHours","getNightShift","nightShiftHours","Scenario","handleStaffChange","handleStaffAdd","staffItem","console","log","staffCopy","handleInfoChange","handleCheckChange","event","checked","prevState","assign","findFormErrors","val","newErrors","results","staffNum","num","center","errors","handleInputChange","keys","Check","label","noValidate","htmlFor","placeholder","isInvalid","Feedback","onStaffChange","onReload","window","location","reload","src","logo","alt","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63e8e4f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport './StaffAdd.css';\n\n// also noticing another bug where the url is holding the value of the selected items in the modal. We should look at how to fix this in the next sprint because it might look different after the refactor\nclass StaffAdd extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topen: false,\n\t\t\tshow: false,\n\t\t};\n\t}\n\n\t//Used to generate an ID for each Staff entry.  We might want ID later to manipulate the staffs collection.\n\tgenerateUUID = () => {\n\t\tvar s = [];\n\t\tvar hexDigits = \"0123456789abcdef\";\n\t\tfor (var i = 0; i < 36; i++) {\n\t\t\ts[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n\t\t}\n\t\ts[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n\t\ts[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\t\ts[8] = s[13] = s[18] = s[23] = \"-\";\n\t\treturn s.join(\"\");\n\t}\n\tgetShiftValue = (shiftString) => {\n        //considered changing shift to just be 12,...8 so parseint would just work\n        //but additional information from string i.e. day, night might be needed.\n        let shiftValue = 0;\n        switch (shiftString) {\n            case '12 Hours Day':\n                shiftValue = 12;\n                break;\n            case '12 Hours Night':\n                shiftValue = 12;\n                break;\n            case '8 Hours Day':\n                shiftValue = 8;\n                break;\n            case '8 Hours Evening':\n                shiftValue = 8;\n                break;\n            case '8 Hours Night':\n                shiftValue = 8;\n                break;\n            default:\n                shiftValue = 0;\n        }\n\n        return shiftValue;\n    }\n\thandleAdd = (value) => {\n\t\tvalue.preventDefault();\n\t\tconst formData = new FormData(value.target),\n\t\t\tformDataObj = Object.fromEntries(formData.entries())\n\n\t\tvar uuid = this.generateUUID();\n\t\tvar shiftTotal = parseInt(formDataObj.quantity) * this.getShiftValue(formDataObj.shift);\n\t\tlet staff = { id: uuid, quantity: formDataObj.quantity, type: formDataObj.staffType, shift: formDataObj.shift, shiftTotal: shiftTotal };\n\n\t\tthis.props.onStaffAdd(staff);\n\t\tthis.handleClose();\n\t}\n\n\t\n\n\thandleClose = () => {\n\t\tthis.setState({ \"show\": false });\n\t}\n\thandleShow = () => {\n\t\tthis.setState({ \"show\": true });\n\t}\n\n\trender() {\n\n\n\t\tlet qtyVals = [];\n\t\tfor (let i = 1; i <= 50; i++) {\n\t\t\tqtyVals.push(i);\n\t\t}\n\t\tconst qtyList = qtyVals.map((qty) =>\n\t\t\t<option key={qty} value={qty}>{qty}</option>\n\t\t);\n\n\t\treturn (\n            <div>  \n\t\t\t<button type=\"button\" className=\"btn btn-outline-primary\" data-testid=\"addstaff-id\" onClick={this.handleShow}>Add Staff</button>\n\t\t\t\t\n\t\t\t\t<Modal animation={false} show={this.state.show} data-testid=\"addStaffModal-id\" onHide={this.handleClose}>\n\t\t\t\t\t<Form onSubmit={this.handleAdd}>\n\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t<Modal.Title>Select your staff member</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"staffType\" required>\n\t\t\t\t\t\t\t\t<Form.Label>Staff Type</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"staffType\">\n\t\t\t\t\t\t\t\t\t<option value=\"RN\">RN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"LVN\">LVN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Unlicensed\">Unlicensed</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"shiftType\" required>\n\t\t\t\t\t\t\t\t<Form.Label>Shift Type</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"shift\" className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Day\">12 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Night\">12 Hours Night</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Day\">8 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Evening\">8 Hours Evening</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Night\">8 Hours Night</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"quantity\" required>\n\t\t\t\t\t\t\t\t<Form.Label>Quantity</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"quantity\">\n\t\t\t\t\t\t\t\t\t{qtyList}\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" data-testid=\"cancelStaffAdd-id\" onClick={this.handleClose}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"outline-primary\" data-testid = \"addStaffConfirm-id\" type=\"submit\">\n\t\t\t\t\t\t\t\tAdd New Staff\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal>\n\t\t\t\t</div>  \n\t\t);\n\t}\n\n\n\n}\nexport default StaffAdd\n","import React from 'react';\nimport './StaffList.css';\nimport { Dash, Plus, Trash } from 'react-bootstrap-icons';\nimport { Form } from \"react-bootstrap\";\n\nclass StaffList extends React.Component {\n    constructor(props) {\n        super(props);\n     \n        this.state = { \n            shiftFilter: \"All\" \n        };\n      }\n\n    listAdd = (index) =>{\n        let quantity = parseInt(this.props.staffs[index].quantity)\n        let shiftTotal = parseInt(this.props.staffs[index].shiftTotal)\n        let shift = parseInt(this.props.staffs[index].shift)\n        quantity = quantity + 1\n\n        if (shift === 12) {\n            shiftTotal = parseInt(shiftTotal) + 12;\n        }else{\n            shiftTotal = parseInt(shiftTotal) + 8;\n        }\n       \n       if(quantity <= 100){\n           this.props.staffs[index].quantity = quantity\n           this.props.staffs[index].shiftTotal = shiftTotal\n           this.props.onStaffChangeOnUpdate(this.props.staffs)\n       }\n       \n    }\n\n    listSub = (index) =>{\n        let quantity = parseInt(this.props.staffs[index].quantity)\n        let shiftTotal = parseInt(this.props.staffs[index].shiftTotal)\n        let shift = parseInt(this.props.staffs[index].shift)\n        quantity = quantity - 1;\n\n        if (shift === 12) {\n            shiftTotal = parseInt(shiftTotal) - 12;\n        }\n        else {\n            shiftTotal = parseInt(shiftTotal) - 8;\n        }\n\n       if(quantity <= 0){\n           this.props.staffs.splice(index,1)\n       }else{\n           this.props.staffs[index].quantity = quantity\n           this.props.staffs[index].shiftTotal = shiftTotal\n       }\n        this.props.onStaffChangeOnUpdate(this.props.staffs)\n    }\n\n    listRemove = (index) =>{\n\n        this.props.staffs.splice(index,1)\n        this.props.onStaffChangeOnUpdate(this.props.staffs)\n\n    }\n\n\n    render() {\n        const staffList = this.props.staffs\n            .filter((staff) =>{\n                if(this.state.shiftFilter)\n                {\n                    return staff.shift === this.state.shiftFilter || this.state.shiftFilter === \"All\";  \n                }\n                return true;\n            })\n            .map((staff, i) =>\n        <tr key={staff.id} id={staff.id} >\n            <td >\n                <Trash className=\"bTrash\" data-testid=\"delete-id\" onClick={this.listRemove.bind(staff,i)} />\n            </td>\n            <td >{staff.type}</td>\n            <td>\n               <Plus className=\"bPlus\" data-testid=\"add-id\" onClick={this.listAdd.bind(staff,i)}/> \n               {staff.quantity} \n               <Dash className=\"bDash\" data-testid=\"minus-id\" onClick={this.listSub.bind(staff,i)}/>\n            </td>\n            <td>{staff.shift}</td>\n            <td>{staff.shiftTotal}</td>\n        </tr>\n\n    );\n\n        return (\n                 this.props.staffs.length > 0 ?\n            <div>\n                <Form.Group className=\"mb-3\" controlId=\"shiftType\" required>\n\t\t\t\t\t\t\t\t<Form.Label>Filter by Shift</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"shift\" \n                                \n                                onChange={e => {\n                                    this.setState({ shiftFilter: e.target.value });\n                                  }}\n                                className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"All\">All</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Day\">12 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Night\">12 Hours Night</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Day\">8 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Evening\">8 Hours Evening</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Night\">8 Hours Night</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n            <table className=\"table table-striped table-hover\" id=\"staffCont\">\n                <thead className=\"table-BSU\">\n                    {staffList.length > 0 ? <tr data-testid=\"staffList-id\">\n                        <th></th>\n                        <th scope=\"col\">Staff Type</th>\n                        <th scope=\"col\">Quantity</th>\n                        <th scope=\"col\">Shift</th>\n                        <th scope=\"col\">Shift Total</th>\n                    </tr> : false}\n                </thead>\n                <tbody>\n\n                    {staffList}\n                </tbody>\n\n            </table>\n            </div>\n: null\n        \n        );\n    }\n}\n\nexport default StaffList;\n","import React from 'react';\nimport './Result.css';\n\n\nclass Result extends React.Component {\n\n    getShiftValue = (shiftString) => {\n        //considered changing shift to just be 12,...8 so parseint would just work\n        //but additional information from string i.e. day, night might be needed.\n        let shiftValue = 0;\n        switch (shiftString) {\n            case '12 Hours Day':\n                shiftValue = 12;\n                break;\n            case '12 Hours Night':\n                shiftValue = 12;\n                break;\n            case '8 Hours Day':\n                shiftValue = 8;\n                break;\n            case '8 Hours Evening':\n                shiftValue = 8;\n                break;\n            case '8 Hours Night':\n                shiftValue = 8;\n                break;\n            default:\n                shiftValue = 0;\n        }\n\n        return shiftValue;\n    }\n\n\n    getStaffHours = (staffs) => {\n        let totalHours = 0;\n        for (var i = 0; i < staffs.length; i++) {\n\n            let shiftValue = this.getShiftValue(staffs[i].shift);\n            let quantity = parseInt(staffs[i].quantity);\n\n            totalHours += shiftValue * quantity;\n        }\n        return totalHours;\n    }\n\n\n    calculation = (info, staffs) => {\n\n        let censusVal = parseInt(info.census);\n        let HPPDVal = parseInt(info.HPPD);\n\n        let patients = censusVal;\n\n        let totalHPPD = (patients * HPPDVal)\n\n        let staffHours = this.getStaffHours(staffs);\n\n        let retVal = totalHPPD - staffHours;\n\n        if (retVal) {\n            return retVal;\n        }\n\n        return \"--\";\n\n    }\n  \n\n    render() {\n\n        const calc = this.calculation(this.props.info, this.props.staffs);\n\n        return (\n\n            <div className=\"card\">\n                <div className=\"card-header\">Hours for Day Remaining</div>\n                <div id=\"results\" className=\"card-body\">\n                    <label>HPPD</label>\n                    <h1 data-testid=\"result\" className={calc < 0 ? 'negCalc' : ''}>{calc !== '--' ? calc.toFixed(0) : calc}</h1>\n\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Result;\n","import React from 'react';\nimport './RandomHPPDInfo.css';\n\nclass RandomHPPDInfo extends React.Component {\n   \n    random = (Min,Max) =>{\n\t\tvar Range = Max - Min;   \n\t\tvar Rand = Math.random();   \n\t\treturn (Min + Math.round(Rand * Range));\n\t}\n\t\n\n    setRandomValues = () =>\n      {\n\n        let randomHPPD = this.random(1,30);\n        let randomBedUnit = this.random(1,60);\n        let randomCensus = this.random(1,randomBedUnit);\n\n        let info ={\n            unit:\"Random Hospital Unit\",\n            HPPD: randomHPPD,\n            bedUnit:randomBedUnit,\n            census: randomCensus,\n        }\n\n\n        this.props.onInfoChange(info); \n  \n      }  \n\n    render() {\n\n\n        return (\n            <button type=\"button\" className=\"btn btn-outline-primary\" data-testid=\"random-id\" onClick={this.setRandomValues}>Random Scenario</button>\n        );\n    }\n}\n\nexport default RandomHPPDInfo;\n","import React from 'react';\n\nclass StaffBudget extends React.Component {\n\n    // grab staff info and add up budget\n    getShiftBudget = (staffs) => {\n        let shiftBudget = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].type === 'RN') {\n                shiftBudget += shiftTotal * 35;\n            } else if (staffs[i].type === 'LVN') {\n                shiftBudget += shiftTotal * 24;\n            } else {\n                shiftBudget += shiftTotal * 15;\n            }\n        }\n\n        return shiftBudget;\n    }\n  \n\n    render() {\n\n        const shiftBudget = this.getShiftBudget(this.props.staffs);\n        return (\n\n            this.props.showBudget ?\n                <div className=\"card mt-4\">\n                    <div className=\"card-header\">Total Staff Expenses</div>\n                    <div id=\"budget\" className=\"card-body\">\n                        <h1 data-testid=\"shiftBudgetValue-id\">${shiftBudget}</h1>\n                    </div>\n                </div>\n            :\n            null\n        )\n    }\n}\n\nexport default StaffBudget;","import React from 'react';\n\nclass ShiftTotals extends React.Component {\n\n    // grab staff info and add up budget\n    getDayShift = (staffs) => {\n        let dayShiftHours = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].shift === '12 Hours Day') {\n                dayShiftHours += shiftTotal;\n            } else if (staffs[i].shift === '8 Hours Day') {\n                dayShiftHours += shiftTotal;\n            }\n        }\n\n        return dayShiftHours;\n    }\n\n    getEveningShift = (staffs) => {\n        let eveningShiftHours = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].shift === '8 Hours Evening') {\n                eveningShiftHours += shiftTotal;\n            }\n        }\n\n        return eveningShiftHours;\n    }\n    getNightShift = (staffs) => {\n        let nightShiftHours = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].shift === '12 Hours Night') {\n                nightShiftHours += shiftTotal;\n            } else if (staffs[i].shift === '8 Hours Night') {\n                nightShiftHours += shiftTotal;\n            }\n        }\n\n        return nightShiftHours;\n    }\n\n    render() {\n\n        const dayShiftHours = this.getDayShift(this.props.staffs);\n        const eveningShiftHours = this.getEveningShift(this.props.staffs);\n        const nightShiftHours = this.getNightShift(this.props.staffs);\n        return (\n            this.props.staffs.length > 0 ?\n            <div>\n                <div className=\"card mt-4\">\n                    <div className=\"card-header\"> Day Shift Hours</div>\n                    <div id=\"dayTotal\" className=\"card-body\">\n                        <h1>{dayShiftHours}</h1>\n                    </div>\n                </div>\n                <div className=\"card mt-4\">\n                    <div className=\"card-header\">Evening Shift Hours</div>\n                    <div id=\"eveningTotal\" className=\"card-body\">\n                        <h1>{eveningShiftHours}</h1>\n                    </div>\n                </div>\n                <div className=\"card mt-4\">\n                    <div className=\"card-header\"> Night Shift Hours</div>\n                    <div id=\"nightTotal\" className=\"card-body\">\n                        <h1>{nightShiftHours}</h1>\n                    </div>\n                </div>\n            </div>\n            : null\n        )\n    }\n}\n\nexport default ShiftTotals;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./Scenario.css\";\nimport StaffAdd from \"./StaffAdd\";\nimport StaffList from \"./StaffList\";\nimport Result from \"./Result\";\nimport RandomHPPDInfo from \"./RandomHPPDInfo\";\nimport StaffBudget from \"./StaffBudget\";\nimport ShiftTotals from \"./ShiftTotals\";\n\nclass Scenario extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: \"\",\n      staffNum: \"The Results:\",\n      num: \"\",\n      center: { \"text-align\": \"center\" },\n      staffs: [],\n      showBudget: false,\n      info: {\n        unit: \"\",\n        HPPD: \"\",\n        bedUnit: \"\",\n        census: \"\",\n      },\n      errors: {\n        HPPD: \"\",\n        bedUnit: \"\",\n        census: \"\",\n      },\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleStaffChange = (staff) => {\n    this.setState({ staffs: staff });\n  };\n\n  handleStaffAdd = (staffItem) => {\n    console.log(staffItem);\n    let staffCopy = [...this.state.staffs, staffItem];\n    this.setState({ staffs: staffCopy });\n  };\n\n  handleInfoChange = (info) => {\n    this.setState({ info: info });\n  };\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let newErrors = {};\n    // form validation\n    if (name !== \"unit\") {\n      newErrors = this.findFormErrors(name, value);\n\n      // set errors in state if they exist\n      if (Object.keys(newErrors).length > 0) {\n        this.setState((prevState) => {\n          let errors = Object.assign({}, prevState.errors);\n          errors[name] = newErrors[name];\n          return { errors };\n        });\n      }\n    }\n\n    //https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\n    this.setState((prevState) => {\n      let info = Object.assign({}, prevState.info); // creating copy of state variable info\n      info[name] = value; // update the name property, assign a new value\n      if (name === \"bedUnit\") {\n        // if bedUnit, census should default to same value\n        info[\"census\"] = value;\n      }\n\n      // clear error if it's been resolved\n      let errors = Object.assign({}, prevState.errors);\n      if (!!errors[name] && errors[name] !== newErrors[name]) {\n        errors[name] = null;\n      }\n\n      return { info, errors }; // return new info and error objects\n    });\n  }\n\n  // handle show budget check change\n  handleCheckChange = (event) => {\n    const target = event.target;\n    const value = target.checked;\n\n    this.setState((prevState) => {\n      let showBudget = Object.assign({}, prevState.showBudget);\n      showBudget = value;\n      return { showBudget };\n    });\n  };\n\n  // https://dev.to/alecgrey/controlled-forms-with-front-and-backend-validations-using-react-bootstrap-5a2\n  findFormErrors = (name, val) => {\n    const newErrors = {};\n\n    if (name === \"HPPD\") {\n      // HPPD errors\n      if (!val || val === \"\") newErrors.HPPD = \"HPPD cannot be blank!\";\n      else if (val < 1 || val > 30)\n        newErrors.HPPD = \"HPPD should be between 1 and 30\";\n    } else if (name === \"bedUnit\") {\n      // bedUnit errors\n      if (!val || val === \"\")\n        newErrors.bedUnit = \"Number of beds cannot be blank!\";\n      else if (val < 1 || val > 60)\n        newErrors.bedUnit = \"Number of beds should be between 1 and 60\";\n    } else if (name === \"census\") {\n      // census errors\n      if (!val || val === \"\") newErrors.census = \"Census cannot be blank!\";\n      else if (val < 1) newErrors.census = \"Census cannot be less than 1\";\n      else if (val > this.state.info.bedUnit)\n        newErrors.census = \"Census cannot exceed the number of beds in a unit!\";\n    }\n    return newErrors;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"row mt-3\">\n          <div className=\"col-md-4 \">\n            <RandomHPPDInfo onInfoChange={this.handleInfoChange} />\n          </div>\n\n          <div className=\"col-md-8 fs-5\">\n            <div className=\"float-sm-end\">\n              <Form.Check type=\"checkbox\" id=\"showBudget\" label=\"Show Budget\" name=\"showBudget\" data-testid=\"showbudget-id\" checked={this.state.showBudget} onChange={this.handleCheckChange} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row mt-5\">\n          <div className=\"col-md-3 col-sm-6 order-sm-last\">\n            <Result staffs={this.state.staffs} info={this.state.info}></Result>\n            <StaffBudget staffs={this.state.staffs} showBudget={this.state.showBudget}></StaffBudget>\n            <ShiftTotals staffs={this.state.staffs}></ShiftTotals>\n          </div>\n\n          {/* Form has to be used instead of form because of validation feedback and bootstrap version used */}\n          <div className=\"col-md-9 col-sm-6 order-sm-first\">\n            <Form className=\"row\" noValidate>\n              <div className=\"col-md-6 mt-3 fs-5\">\n                <Form.Label htmlFor=\"unit\">Hospital unit</Form.Label>\n                <Form.Control type=\"text\" name=\"unit\" id=\"unit\" data-testid=\"unit-id\" placeholder=\"Hospital Unit\" onChange={this.handleInputChange} value={this.state.info.unit} />\n              </div>\n\n              <div className=\"col-md-6 mt-3 fs-5\">\n                <Form.Label htmlFor=\"bedUnit\">Number of beds</Form.Label>\n                <Form.Control type=\"number\" name=\"bedUnit\" id=\"bedUnit\" data-testid=\"numbeds-id\" placeholder=\"Number of Beds\"  onChange={this.handleInputChange} value={this.state.info.bedUnit}  isInvalid={!!this.state.errors.bedUnit} />\n                <Form.Control.Feedback type=\"invalid\"> {this.state.errors.bedUnit} </Form.Control.Feedback>\n              </div>\n\n              <div className=\"col-md-6 mt-3 fs-5\">\n                <Form.Label htmlFor=\"HPPD\">HPPD</Form.Label>\n                <Form.Control type=\"number\"  name=\"HPPD\" id=\"HPPD\" data-testid=\"hppd-id\" placeholder=\"HPPD\" onChange={this.handleInputChange} value={this.state.info.HPPD} isInvalid={!!this.state.errors.HPPD} />\n                <Form.Control.Feedback type=\"invalid\"> {this.state.errors.HPPD} </Form.Control.Feedback>\n              </div>\n\n              <div className=\"col-md-6 mt-3 fs-5\">\n                <Form.Label htmlFor=\"census\">Census</Form.Label>\n                <Form.Control type=\"number\" name=\"census\" id=\"census\" data-testid=\"census-id\" placeholder=\"Census\" onChange={this.handleInputChange} value={this.state.info.census} isInvalid={!!this.state.errors.census}/>\n                <Form.Control.Feedback type=\"invalid\"> {this.state.errors.census} </Form.Control.Feedback>\n              </div>\n            </Form>\n            <div className=\"row\">\n              <div className=\"col-md-4 mt-4 \">\n                <StaffAdd  onStaffChange={this.handleStaffChange} onStaffAdd={this.handleStaffAdd} staffs={this.state.staffs} />\n              </div>\n            </div>\n\n            <div className=\"row mt-5 \">\n              <div className =\"mb-10\">\n              <StaffList staffs={this.state.staffs} onStaffChangeOnUpdate={this.handleStaffChange}></StaffList>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scenario;\n","export default __webpack_public_path__ + \"static/media/Left-aligned-square-gray-2.11bbe62b.png\";","import './Header.css';\nimport React from 'react';\nimport logo from '../../assets/Left-aligned-square-gray-2.png';\n\nclass Header extends React.Component {\n\n    onReload = () => {\n        console.log(\"Reload clicked\");\n        window.location.reload();\n    }\n\n    render() {\n        return (\n\n            <header>\n                <nav className=\"navbar navbar-light bg-light \">\n                    <div className=\"container-fluid\">\n                        <img src={logo} alt=\"Logo\" data-testid=\"reload\" onClick={this.onReload} />\n                        <div id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                <li className=\"nav-item\">\n                                    <a className=\"text-dark nav-link\" href=\"https://www.boisestate.edu/nursing/\">BSU Nursing Department</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n\n                <div className=\"p-5 bg-primary text-white rounded\">\n                    <h1>Inpatient Nurse Staffing Simulator</h1>\n                </div>\n            </header>\n\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(){\n    return(\n        <footer id=\"footer\">BSU Nursing |   Dr. Renee Walters   |   reneewalters@boisestate.edu</footer>\n    );\n}\n\nexport default Footer;","import './App.css';\n\nimport Scenario from './components/main/Scenario.js';\nimport Header from './components/header/Header.js';\nimport Footer from './components/footer/Footer.js';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <Header />\n        <Scenario />\n        <Footer />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}