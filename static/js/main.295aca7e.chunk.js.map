{"version":3,"sources":["components/main/StaffAdd.js","components/main/Scenario.js","components/main/Main.js","assets/Left-aligned-square-gray-2.png","components/header/Header.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["StaffAdd","state","staffs","results","open","inputW","width","staffNum","style","position","top","left","transform","bgcolor","border","boxShadow","p","handleAdd","value","s","hexDigits","i","substr","Math","floor","random","staff","id","join","num","quantity","type","shift","setState","handleClose","setResult","addNum","length","reduceNum","e","isDelete","filter","item","props","result","setInfoStaffNum","handleOpen","staffList","this","map","defaultValue","onChange","Option","Content","onClick","center","title","visible","onOk","onCancel","footer","labelCol","span","wrapperCol","layout","labelAlign","onFinish","Item","label","name","rules","required","min","offset","htmlType","Component","Scenario","changeHandler","event","target","val","test","console","log","alert","unit","hppd","numbeds","census","className","Card","Header","Body","Form","InputGroup","size","bind","React","Main","onReload","window","location","reload","Jumbotron","src","logo","alt","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.295aca7e.chunk.js","sourcesContent":["import React,{Component } from 'react';\nimport { Modal,Form, Button, Select, InputNumber, Layout} from 'antd';\nimport 'antd/dist/antd.css'\n\nclass StaffAdd extends Component\n{\n\t\n\tstate=\n\t{\n\t\t   \n\t\t   staffs: [],\n\t\t   results:\"\",\n\t\t   open:false,\n\t\t   inputW:{width: 150,},\n\t\t   staffNum:\"The Results:\",\n\t\t   style : {\n\t\t     position: 'absolute',\n\t\t     top: '50%',\n\t\t     left: '50%',\n\t\t     transform: 'translate(-50%, -50%)',\n\t\t     width: 1000,\n\t\t     bgcolor: 'background.paper',\n\t\t     border: '2px solid #000',\n\t\t     boxShadow: 24,\n\t\t     p: 4,\n\t\t   }\n\t}\n\t\n\t \n\t \n\t  handleAdd = (value) =>\n\t  {\n\t\t  \n\t\t  var s = [];\n\t\t  var hexDigits = \"0123456789abcdef\";\n\t\t  for (var i = 0; i < 36; i++) {\n\t\t      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n\t\t  }\n\t\t  s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n\t\t  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\t\t  s[8] = s[13] = s[18] = s[23] = \"-\";\n\t\t  \t  \n\t\t  var uuid = s.join(\"\");\n\t\t  \n\t\t  let staff = {id:uuid,num:value.quantity,type:value.type,shift:value.shift};\n\t\t  let staffs=[...this.state.staffs,staff]\n\t\t  this.setState({staffs:staffs});\n\t\t  this.handleClose();\n\t\t  this.setResult(staffs);\n\t  }\n\t addNum = (id) =>\n\t {\n\t \t let staffs=this.state.staffs;\n\t \t for(var i=0;i<staffs.length;i++)\n\t \t {\n\t \t\t if(staffs[i].id===id)\n\t \t\t {\n\t \t\t\t staffs[i].num++;\n\t \t\t }\n\t \t \t\n\t \t }\n\t \t this.setState({staffs:staffs});\n\t\t this.setResult(staffs);\n\t }\n\t\n\t reduceNum = (e,id) =>\n\t {\n\t \t let staffs=this.state.staffs;\n\t\t\n\t\t let isDelete=false;\n\t \t for(var i=0;i<staffs.length;i++)\n\t \t {\n\t \t\t if(staffs[i].id===id)\n\t \t\t {\n\t \t\t\t if(e>=1)\n\t \t\t\t {\n\t \t\t\t\t  staffs[i].num=e;\n\t\t\t\t\t  \n\t \t\t\t }else\n\t\t\t\t {\n\t\t\t\t\t \tisDelete=true;  \n\t\t\t\t }\n\t \t\t\tbreak;\n\t \t\t }\n\t \t \t\n\t \t }\n\t\t if(isDelete)\n\t\t {\n\t\t\t  staffs = staffs.filter(item => item.id!==id )\n\t\t }\n\t\t \n\t \t this.setState({staffs:staffs});\n\t\tthis.setResult(staffs);\n\t }\n\t\n\tsetResult = (staffs) =>\n\t{\n\t\t\t \n\t\t let num = 0;\n\t\t for(var i=0;i<staffs.length;i++)\n\t\t {\n\t\t\t\n\t\t\tnum = num+staffs[i].num;\n\t\t\t\n\t\t }\n\t\t const result = this.props.result;\n\t\t if(result===''){\n\t\t\t return;\n\t\t }\n\t\t this.props.setInfoStaffNum(num)\n\t\t\n\t\t // if(parseInt(num)<=parseInt(result))\n\t\t // {\n\t\t\t//  let show = `In line with budget`;\n\t\t\t//  this.setState({\"results\":show});\n\t\t\t//  this.setState({\"staffNum\":\"The Results:\"+num});\n\t\t // }else\n\t\t // {\n\t\t\t//  let show =`The rated budget has been exceeded`;\n\t\t\t//   this.setState({\"results\":show});\n\t\t\t//  this.setState({\"staffNum\":\"The Results:\"+num});\n\t\t // }\n\t\t\n\t}\n\t\n\n\t\n\thandleOpen = () =>\n\t{\n\t\t\t \n\t\tthis.setState({\"open\":true});\t\n\t}\n\thandleClose = () =>\n\t{\n\t\t\t \n\t\tthis.setState({\"open\":false});\t\n\t}\n\t// const [open, setOpen] = React.useState(false);\n\t\n\t  render () {\n\t\tconst staffList = this.state.staffs.map((staff) =>\n\t\t\n\t\t       <div>\n\t\t           <InputNumber  defaultValue={staff.num} id={staff.id} onChange={e => this.reduceNum(e,staff.id) } />\t\t\t    \n\t\t\t\t      <Select defaultValue={staff.type} style={this.state.inputW}>\n\t\t\t\t\t\t<Select.Option value=\"RN\">RN</Select.Option>\n\t\t\t\t\t\t<Select.Option value=\"LVN\">LVN</Select.Option>\n\t\t\t\t\t\t<Select.Option value=\"Unlicensed\">Unlicensed</Select.Option>\n\t\t\t\t\t  </Select>\n\t\t\t\t\t  <Select defaultValue={staff.shift} style={this.state.inputW}>\n\t\t\t\t\t\t    <Select.Option value=\"12 Hours Day\">12 Hours Day</Select.Option>\n\t\t\t\t\t\t\t<Select.Option value=\"12 Hours Night\">12 Hours Night</Select.Option>\n\t\t\t\t\t\t\t<Select.Option value=\"8 Hours Day\">8 Hours Day</Select.Option>\n\t\t\t\t\t\t\t<Select.Option value=\"8 Hours Evening\">8 Hours Evening</Select.Option>\n\t\t\t\t\t\t\t<Select.Option value=\"8 Hours Night\">8 Hours Night</Select.Option>\n\t\t\t\t\t\t</Select>\n\t\t       </div>\n\t\t\t\n\t\t  );\n\t\t \n\t    return (\n\t\t     <Layout>\n\t\t     \t<Layout.Content>\n\t\t\t\t<div><Button onClick={this.handleOpen}>Add new Staff</Button></div>\n\t\t\t\t<div>\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t{staffList}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t   <p style={this.state.center}>\n\t\t\t\t\t{this.props.staffNum}\n\t\t\t\t\t</p  >\n\t\t\t\t\t<p style={this.state.center}>\n\t\t\t\t\t{this.props.results}\n\t\t\t\t\t</p >\n\t\t\t  </div>\n\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<Modal\n\t\t\t\t       title=\"Select your stuffing memeber close\" visible={this.state.open} onOk={this.handleOpen} onCancel={this.handleClose}\n\t\t\t\t\t    footer={null}\n\t\t\t\t      >\n\t\t\t\t    <Form\n\t\t\t\t           labelCol={{ span: 6 }}\n\t\t\t\t           wrapperCol={{ span: 12 }}\n\t\t\t\t           layout=\"horizontal\"\n\t\t\t\t\t\t   labelAlign=\"left\"\n\t\t\t\t\t\t   onFinish={this.handleAdd}\n\t\t\t\t         >\n\t\t\t\t\t\t <Form.Item label=\"Type\" name=\"type\"\n\t\t\t\t\t\t  rules={[{required: true}]}\n\t\t\t\t\t\t >\n\t\t\t\t\t\t     <Select>\n\t\t\t\t\t\t        <Select.Option value=\"RN\">RN</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"LVN\">LVN</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"Unlicensed\">Unlicensed</Select.Option>\n\t\t\t\t\t\t     </Select>\n\t\t\t\t\t\t </Form.Item>\n\t\t\t\t\t\t <Form.Item label=\"Quantity\" name=\"quantity\" defaultValue='1' rules={[{required: true}]}>\n\t\t\t\t\t\t        <InputNumber   min=\"1\"/>\n\t\t\t\t\t\t </Form.Item>\n\t\t\t\t\t\t <Form.Item label=\"Shift\"  name=\"shift\"\n\t\t\t\t\t\t rules={[{required: true}]}\n\t\t\t\t\t\t >\n\t\t\t\t\t\t    <Select >\n\t\t\t\t\t\t        <Select.Option value=\"12 Hours Day\">12 Hours Day</Select.Option>\n\t\t\t\t\t\t \t\t<Select.Option value=\"12 Hours Night\">12 Hours Night</Select.Option>\n\t\t\t\t\t\t \t\t<Select.Option value=\"8 Hours Day\">8 Hours Day</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"8 Hours Evening\">8 Hours Evening</Select.Option>\n\t\t\t\t\t\t\t\t<Select.Option value=\"8 Hours Night\">8 Hours Night</Select.Option>\n\t\t\t\t\t\t    </Select>\n\t\t\t\t\t\t </Form.Item>\n\t\t\t\t\t\t <Form.Item wrapperCol={{ offset: 0, span: 16 }} >\n\t\t\t\t\t\t        <Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t          Submit\n\t\t\t\t\t\t        </Button>\n\t\t\t\t\t\t </Form.Item>\n\t\t\t\t\t\t \n\t\t\t\t\t</Form>\n\t\t\t\t         \n\t\t\t\t\t \n\n\t\t\t\t</Modal>\n\t\t\t  </Layout.Content>\n\t\t\t  </Layout>\n\t\t);\n\t  }\n\t\t\t\n\t\t\n\t\n}\nexport default StaffAdd\n","import React from 'react';\nimport { Form, InputGroup, Card } from \"react-bootstrap\";\nimport './Scenario.css';\nimport StaffAdd from './StaffAdd'\n\nclass Scenario extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results:\"\",\n            staffNum:\"The Results:\",\n            num:\"\",\n            staffs: [],\n\t\t\tunit: null,\n\t\t\thppd: null,\n\t\t\tnumbeds: null,\n\t\t\tcensus:100, // default to 100\n        };\n    }\n    //We are going to need to have alerts or errors so that we can test incorrect \n    //input as of right now there is not a good way to test bad input in the scenario.test.js\n    // submitHandler = (event) => {\n    //     event.preventDefault();\n    //     let unit = this.state.unit;\n    //     let hppd = this.state.hppd;\n    //     let numbeds = this.state.numbeds;\n\n    //     if (!Number(hppd) && !Number(numbeds)) {\n    //         alert(\"Your hppd must be a number\");\n    //         alert(\"Your numbeds must be a number\");\n    //     }\n    //     if(Number(unit)){\n    //         alert(\"Your unit can't be a number\")\n    //     }\n\n    // }\n\n    changeHandler = (event) => {\n        let name = event.target.name;\n        let val = event.target.value;\n\t\tif(name!=='unit') {\n\t\t\tif(!(/^\\+?[1-9][0-9]*$/.test(val)))\n\t\t\t{\n\t\t\t\talert(\"Only numbers(positive integers) can be entered\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ [name]: val }, () => \n    \tconsole.log(this.state));\n    }\n\t\n\tsetInfoStaffNum = (num) =>\n\t{\n\t\tdebugger;\n\t\tthis.setState({\"num\":num});\n\t\t// this.calculation(this.state.info,num);\n\t}\n\t\n    render() {\n        return (\n\n            <div className=\"App\">\n\n                    <Card id=\"scenario\">\n                        <Card.Header>Fill out the scenario fields based off of the in-class example.</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<InputGroup size=\"sm\" className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t<p>The hospital unit is </p>\n\t\t\t\t\t\t\t\t\t<input type='text' name='unit' data-testid=\"unit-id\" onChange={this.changeHandler.bind(this)}/>\n\t\t\t\t\t\t\t\t\t<p> and the HPPD is </p>\n\t\t\t\t\t\t\t\t\t<input type='text' name='hppd' data-testid=\"hppd-id\" onChange={this.changeHandler.bind(this)}/>\n\t\t\t\t\t\t\t\t\t<p>. You have </p>\n\t\t\t\t\t\t\t\t\t<input type='text' name='numbeds' data-testid=\"numbeds-id\" onChange={this.changeHandler.bind(this)}/>\n\t\t\t\t\t\t\t\t\t<p> number of beds in your unit and your census is </p>\n\t\t\t\t\t\t\t\t\t<input type='text' name='census' data-testid=\"census-id\" value={this.state.census} onChange={this.changeHandler.bind(this)}/>\n\t\t\t\t\t\t\t\t\t<p>% full. Based off of this scenario, allocate your staffing resources.</p>\n\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\n            \t\t<StaffAdd staffs={this.state.staffs}  results={this.state.results} staffNum={this.state.staffNum} setInfoStaffNum={this.setInfoStaffNum}/>\n            </div>\n\n        );\n    }\n}\n\nexport default Scenario;\n","import Scenario from './Scenario.js';\n\nfunction Main() {\n    return (\n        <div>\n            <Scenario />\n        </div>\n    );\n}\n\nexport default Main;","export default __webpack_public_path__ + \"static/media/Left-aligned-square-gray-2.11bbe62b.png\";","import './Header.css';\nimport React from 'react';\nimport logo from '../../assets/Left-aligned-square-gray-2.png';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass Header extends React.Component {\n\n    onReload = () => {\n        console.log(\"Reload clicked\");\n        window.location.reload();\n    }\n\n    render() {\n        return(\n            <Jumbotron id=\"header\">\n                <img src={logo} alt=\"Logo\" data-testid=\"reload\" onClick={this.onReload}/>\n                <h1>BSU In-Patient Nurse Staffing Simulator</h1>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(){\n    return(\n        <footer id=\"footer\">BSU Nursing |   Dr. Renee Walters   |   reneewalters@boisestate.edu</footer>\n    );\n}\n\nexport default Footer;","import './App.css';\nimport Main from './components/main/Main.js';\nimport Header from './components/header/Header.js';\nimport Footer from './components/footer/Footer.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}