{"version":3,"sources":["components/main/StaffAdd.js","components/main/Scenario.js","components/main/Main.js","assets/Left-aligned-square-gray-2.png","components/header/Header.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["StaffAdd","state","staffs","results","open","show","staffNum","handleAdd","value","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","s","hexDigits","i","substr","Math","floor","random","staff","id","join","num","quantity","type","staffType","shift","setState","handleClose","setResult","addNum","length","reduceNum","e","isDelete","filter","item","props","result","setInfoStaffNum","handleShow","staffList","this","map","Row","className","Col","qtyVals","push","qtyList","qty","Container","fluid","Button","variant","onClick","Modal","onHide","Form","onSubmit","Header","Title","Body","Group","controlId","required","Label","Control","as","name","Footer","React","Component","Scenario","changeHandler","event","val","test","setInfo","alert","calculation","info","bedUnit","census","HPPD","parseInt","console","log","unit","Min","Max","Range","Rand","round","handleRandom","num1","a","document","getElementById","num2","num3","center","Card","InputGroup","size","onChange","bind","Main","onReload","window","location","reload","Jumbotron","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8faceaab.chunk.js","sourcesContent":["import React from 'react';\nimport { Modal, Button, Container, Form, Row, Col } from \"react-bootstrap\";\nimport './StaffAdd.css';\n\n// we're getting a warning when you open the modal. I believe this is because there are things in here that are outside the modal. At least in Angular, the modal opening is\n// triggered from another component (so once we refactor, should be triggered in Main.js), then only modal pieces are in  StaffAdd.js, and there's a listener on the close in\n// Main.js so once the modal is submitted, that data is passed back to Main.js\n// Here's the error message:\n// index.js:1 Warning: findDOMNode is deprecated in StrictMode. findDOMNode was passed an instance of Transition which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\n//     at div\n//     at Transition (http://localhost:3000/f21-angels-of-mercy/static/js/vendors~main.chunk.js:47205:30)\n//     at http://localhost:3000/f21-angels-of-mercy/static/js/vendors~main.chunk.js:10169:24\n//     at BackdropTransition\n//     at http://localhost:3000/f21-angels-of-mercy/static/js/vendors~main.chunk.js:44882:24\n//     at http://localhost:3000/f21-angels-of-mercy/static/js/vendors~main.chunk.js:11611:23\n//     at div\n//     at http://localhost:3000/f21-angels-of-mercy/static/js/vendors~main.chunk.js:9528:23\n//     at StaffAdd (http://localhost:3000/f21-angels-of-mercy/static/js/main.chunk.js:1429:5)\n//     at div\n//     at Scenario (http://localhost:3000/f21-angels-of-mercy/static/js/main.chunk.js:1057:5)\n//     at div\n//     at Main\n//     at div\n//     at App\n\n// also noticing another bug where the url is holding the value of the selected items in the modal. We should look at how to fix this in the next sprint because it might look different after the refactor\nclass StaffAdd extends React.Component\n{\n\t\n\tstate=\n\t{\n\t\t   \n\t\t   staffs: [],\n\t\t   results:\"\",\n\t\t   open:false,\n\t\t   show:false,\n\t\t   staffNum:\"The Results:\"\n\t}\n\t\n\t \n\t \n\t  handleAdd = (value) =>\n\t  {\n\t\t  value.preventDefault();\n\t\t  const formData = new FormData(value.target),\n                formDataObj = Object.fromEntries(formData.entries())\n\t\t  var s = [];\n\t\t  var hexDigits = \"0123456789abcdef\";\n\t\t  for (var i = 0; i < 36; i++) {\n\t\t      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n\t\t  }\n\t\t  s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n\t\t  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\t\t  s[8] = s[13] = s[18] = s[23] = \"-\";\n\t\t  \t  \n\t\t  var uuid = s.join(\"\");\n\t\t  \n\t\t  let staff = {id:uuid,num:formDataObj.quantity,type:formDataObj.staffType,shift:formDataObj.shift};\n\t\t  let staffs=[...this.state.staffs,staff]\n\t\t  this.setState({staffs:staffs});\n\t\t  this.handleClose();\n\t\t  this.setResult(staffs);\n\t  }\n\t addNum = (id) =>\n\t {\n\t \t let staffs=this.state.staffs;\n\t \t for(var i=0;i<staffs.length;i++)\n\t \t {\n\t \t\t if(staffs[i].id===id)\n\t \t\t {\n\t \t\t\t staffs[i].num++;\n\t \t\t }\n\t \t \t\n\t \t }\n\t \t this.setState({staffs:staffs});\n\t\t this.setResult(staffs);\n\t }\n\t\n\t reduceNum = (e,id) =>\n\t {\n\t \t let staffs=this.state.staffs;\n\t\t\n\t\t let isDelete=false;\n\t \t for(var i=0;i<staffs.length;i++)\n\t \t {\n\t \t\t if(staffs[i].id===id)\n\t \t\t {\n\t \t\t\t if(e>=1)\n\t \t\t\t {\n\t \t\t\t\t  staffs[i].num=e;\n\t\t\t\t\t  \n\t \t\t\t }else\n\t\t\t\t {\n\t\t\t\t\t \tisDelete=true;  \n\t\t\t\t }\n\t \t\t\tbreak;\n\t \t\t }\n\t \t \t\n\t \t }\n\t\t if(isDelete)\n\t\t {\n\t\t\t  staffs = staffs.filter(item => item.id!==id )\n\t\t }\n\t\t \n\t \t this.setState({staffs:staffs});\n\t\tthis.setResult(staffs);\n\t }\n\t\n\tsetResult = (staffs) =>\n\t{\n\t\t\t \n\t\t let num = 0;\n\t\t for(var i=0;i<staffs.length;i++)\n\t\t {\n\t\t\t\n\t\t\tnum = num+staffs[i].num;\n\t\t\t\n\t\t }\n\t\t const result = this.props.result;\n\t\t if(result===''){\n\t\t\t return;\n\t\t }\n\t\t this.props.setInfoStaffNum(num)\n\t\t\n\t\t // if(parseInt(num)<=parseInt(result))\n\t\t // {\n\t\t\t//  let show = `In line with budget`;\n\t\t\t//  this.setState({\"results\":show});\n\t\t\t//  this.setState({\"staffNum\":\"The Results:\"+num});\n\t\t // }else\n\t\t // {\n\t\t\t//  let show =`The rated budget has been exceeded`;\n\t\t\t//   this.setState({\"results\":show});\n\t\t\t//  this.setState({\"staffNum\":\"The Results:\"+num});\n\t\t // }\n\t\t\n\t}\n\n\thandleClose = () => {\n\t\tthis.setState({\"show\":false});\n\t}\n\thandleShow = () => {\n\t\tthis.setState({\"show\":true});\n\t}\n\t\n\t  render () {\n\t\tconst staffList = this.state.staffs.map((staff) =>\n\t\t\t\t\t<Row key={staff.id} id={staff.id} className=\"border\">\n\t\t\t\t\t\t<Col className=\"border\">{staff.num}</Col>\n\t\t\t\t\t\t<Col className=\"border\">{staff.type}</Col>\n\t\t\t\t\t\t<Col className=\"border\">{staff.shift}</Col>\n\t\t\t\t\t</Row>\t\t\t\n\t\t  );\n\n\t\tlet qtyVals = [];\n\t\tfor(let i=1; i<=50; i++){\n\t\t\tqtyVals.push(i);\n\t\t}\n\t\tconst qtyList = qtyVals.map((qty) =>\n\t\t\t<option key={qty} value={qty}>{qty}</option>\n\t\t);\n\t\t \n\t    return (\n\t\t     <Container id=\"resultsCont\" fluid>\n\t\t\t\t<Button variant=\"primary\" onClick={this.handleShow}>Add new Staff</Button>\n\t\t\t\t<Container id=\"staffCont\">\n\t\t\t\t\t{staffList.length > 0 ? <Row className=\"border\">\n\t\t\t\t\t\t<Col className=\"border\">Quantity</Col>\n\t\t\t\t\t\t<Col className=\"border\">Staff Type</Col>\n\t\t\t\t\t\t<Col className=\"border\">Shift Type</Col>\n\t\t\t\t\t</Row> : false}\n\t\t\t\t\t{staffList}\t\n\t\t\t\t</Container>\n\t\t\t\t<div id=\"results\">\n\t\t\t\t\t<p>{this.props.staffNum}</p  >\n\t\t\t\t\t<p>{this.props.results}</p >\n\t\t\t  \t</div>\n\t\t\t\t<Modal show={this.state.show} onHide={this.handleClose}>\n\t\t\t\t<Form onSubmit={ this.handleAdd }>\n\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t<Modal.Title>Select your staff member</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"staffType\" required>\n\t\t\t\t\t\t\t\t<Form.Label>Staff Type</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"staffType\">\n\t\t\t\t\t\t\t\t\t<option value=\"RN\">RN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"LVN\">LVN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Unlicensed\">Unlicensed</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"shiftType\" required>\n\t\t\t\t\t\t\t\t<Form.Label>Shift Type</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"shift\" className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Day\">12 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Night\">12 Hours Night</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Day\">8 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Evening\">8 Hours Evening</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Night\">8 Hours Night</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"quantity\" required>\n\t\t\t\t\t\t\t\t<Form.Label>Quantity</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"quantity\">\n\t\t\t\t\t\t\t\t\t{qtyList}\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={this.handleClose}>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal>\n\t\t\t  </Container>\n\t\t);\n\t  }\n\t\t\t\n\t\t\n\t\n}\nexport default StaffAdd\n","import React from 'react';\nimport { Form, InputGroup, Card } from \"react-bootstrap\";\nimport './Scenario.css';\nimport StaffAdd from './StaffAdd'\n\nclass Scenario extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results:\"\",\n            staffNum:\"The Results:\",\n            num:\"\",\n\t\t\tcenter:{\"text-align\":'center'},\n            staffs: [],\n            info:{\n            \t   unit:\"\",\n            \t   HPPD:\"\",\n                bedUnit:\"\",\n                census: 100,\n               }\n        };\n    }\n\n    //We are going to need to have alerts or errors so that we can test incorrect \n    //input as of right now there is not a good way to test bad input in the scenario.test.js\n    // submitHandler = (event) => {\n    //     event.preventDefault();\n    //     let unit = this.state.unit;\n    //     let hppd = this.state.hppd;\n    //     let numbeds = this.state.numbeds;\n\n    //     if (!Number(hppd) && !Number(numbeds)) {\n    //         alert(\"Your hppd must be a number\");\n    //         alert(\"Your numbeds must be a number\");\n    //     }\n    //     if(Number(unit)){\n    //         alert(\"Your unit can't be a number\")\n    //     }\n\n    // }\n\n\n    changeHandler = (event) => {\n        let name = event.target.name;\n        let val = event.target.value;\n        if (name !== 'unit') {\n            if (!(/^\\+?[1-9][0-9]*$/.test(val))) {\n                alert(\"Only numbers(positive integers) can be entered\");\n                return;\n            }\n        }\n\n\n        this.setInfo(name, val)\n        //this.setState({ [name]: val }, () =>console.log(this.state));\n    }\n\n\t\n\tcalculation = (info,num) =>\n    {\n\n            if (info.bedUnit !== '' && info.census !== '' && info.HPPD !== '')\n            {\n\n                let result = parseInt(info.bedUnit) + parseInt(info.census) + parseInt(info.HPPD);\n                console.log(num + \":\" + result)\n\n                if (num <= 0)\n                {\n                    this.setState({ \"staffNum\": \"The Results:\" + result });\n                }\n\n                else\n                {\n                    num = result + num;\n                    this.setState({ \"staffNum\": \"The Results:\" + num });\n                }\n\n            }\n\n\t}\n\t\n\tsetInfo = (name,val) =>\n\t{\n\t\tlet info=this.state.info;\n\t\tif(name==='unit')\n\t\t{\n\t\t\tinfo.unit=val;\n\t\t}else if(name==='HPPD')\n\t\t{\n\t\t\tinfo.HPPD=val;\n\t\t}else if(name==='census')\n\t\t{\n\t\t\tinfo.census=val;\n\t\t}else if(name==='bedUnit')\n\t\t{\n\t\t\tinfo.bedUnit=val;\n\t\t}\n\t\tthis.setState({info:info});\n\t\tthis.calculation(info,this.state.num);\n\t}\n\tsetInfoStaffNum = (num) =>\n\t{\n\t\tthis.setState({\"num\":num});\n\t\tthis.calculation(this.state.info,num);\n\t}\n\n\t\n\trandom = (Min,Max) =>{\n\t\tvar Range = Max - Min;   \n\t\tvar Rand = Math.random();   \n\t\treturn (Min + Math.round(Rand * Range));\n\t}\n\thandleRandom = () =>\n\t{\n\t\tconst num1 = this.random(8,24);\n\t\tvar a=document.getElementById(\"HPPD\");\n        a.value=num1;\n\t\tthis.setInfo(\"HPPD\",num1);\t\n\t\t\n\t\tconst num2 = this.random(1,100);\n\t\ta=document.getElementById(\"census\");\n        a.value=num2;\n\t    this.setInfo(\"census\",num2)\t;\n\t\tconst num3 = this.random(10,1000);\n\t\ta=document.getElementById(\"bedUnit\");\n        a.value=num3;\n\t\tthis.setInfo(\"bedUnit\",num3)\t;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n\n                <Card id=\"scenario\">\n                    <Card.Header>Fill out the scenario fields based off of the in-class example.</Card.Header>\n                    <Card.Body>\n                        <Form>\n                            <InputGroup size=\"sm\" className=\"mb-3\">\n                                <p>The hospital unit is</p>\n                                <input type='text' name='unit' data-testid=\"unit-id\" onChange={this.changeHandler.bind(this)} />\n                                <p>and the HPPD is</p>\n                                <input type='text' name=\"HPPD\" data-testid=\"hppd-id\" id=\"HPPD\" onChange={this.changeHandler.bind(this)} />\n                                <p>. You have</p>\n                                <input type='text' name=\"bedUnit\" data-testid=\"numbeds-id\" onChange={this.changeHandler.bind(this)} id=\"bedUnit\" />\n                                <p>number of beds in your unit and your census is</p>\n                                <input type='text' name=\"census\" data-testid=\"census-id\" id=\"census\" onChange={this.changeHandler.bind(this)} />\n                                <p>% full. Based off of this scenario, allocate your staffing resources.</p>\n                            </InputGroup>\n                        </Form>\n                    </Card.Body>\n                </Card>\n\n                <StaffAdd staffs={this.state.staffs}  results={this.state.results} staffNum={this.state.staffNum} setInfoStaffNum={this.setInfoStaffNum}/>\n\n            </div>\n        );\n    }\n}\n\nexport default Scenario;\n","import Scenario from './Scenario.js';\n\nfunction Main() {\n    return (\n        <div>\n            <Scenario />\n        </div>\n    );\n}\n\nexport default Main;","export default __webpack_public_path__ + \"static/media/Left-aligned-square-gray-2.11bbe62b.png\";","import './Header.css';\nimport React from 'react';\nimport logo from '../../assets/Left-aligned-square-gray-2.png';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass Header extends React.Component {\n\n    onReload = () => {\n        console.log(\"Reload clicked\");\n        window.location.reload();\n    }\n\n    render() {\n        return(\n            <Jumbotron id=\"header\">\n                <img src={logo} alt=\"Logo\" data-testid=\"reload\" onClick={this.onReload}/>\n                <h1>BSU In-Patient Nurse Staffing Simulator</h1>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(){\n    return(\n        <footer id=\"footer\">BSU Nursing |   Dr. Renee Walters   |   reneewalters@boisestate.edu</footer>\n    );\n}\n\nexport default Footer;","import './App.css';\nimport Main from './components/main/Main.js';\nimport Header from './components/header/Header.js';\nimport Footer from './components/footer/Footer.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}